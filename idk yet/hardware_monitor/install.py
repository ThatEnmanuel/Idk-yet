#!/usr/bin/env python3
"""
Script de instalaci√≥n autom√°tica para Hardware Monitor
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def run_command(command, description):
    """Ejecutar comando y mostrar resultado"""
    print(f"üîß {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} completado")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Error en {description}: {e}")
        print(f"Salida de error: {e.stderr}")
        return False

def check_python_version():
    """Verificar versi√≥n de Python"""
    version = sys.version_info
    if version.major < 3 or (version.major == 3 and version.minor < 8):
        print("‚ùå Se requiere Python 3.8 o superior")
        print(f"   Versi√≥n actual: {version.major}.{version.minor}.{version.micro}")
        return False
    print(f"‚úÖ Python {version.major}.{version.minor}.{version.micro} detectado")
    return True

def create_virtual_environment():
    """Crear entorno virtual"""
    if os.path.exists("venv"):
        print("‚úÖ Entorno virtual ya existe")
        return True
    
    return run_command("python -m venv venv", "Creando entorno virtual")

def activate_virtual_environment():
    """Activar entorno virtual"""
    if os.name == 'nt':  # Windows
        activate_script = "venv\\Scripts\\activate"
    else:  # Unix/Linux/macOS
        activate_script = "venv/bin/activate"
    
    if os.path.exists(activate_script):
        print("‚úÖ Entorno virtual listo para activar")
        return True
    else:
        print("‚ùå No se pudo encontrar el script de activaci√≥n")
        return False

def install_dependencies():
    """Instalar dependencias"""
    pip_cmd = "venv\\Scripts\\pip" if os.name == 'nt' else "venv/bin/pip"
    return run_command(f"{pip_cmd} install -r requirements.txt", "Instalando dependencias")

def create_env_file():
    """Crear archivo .env si no existe"""
    if os.path.exists(".env"):
        print("‚úÖ Archivo .env ya existe")
        return True
    
    if os.path.exists("env.example"):
        shutil.copy("env.example", ".env")
        print("‚úÖ Archivo .env creado desde env.example")
        return True
    else:
        print("‚ùå No se encontr√≥ env.example")
        return False

def test_installation():
    """Probar la instalaci√≥n"""
    print("üß™ Probando instalaci√≥n...")
    
    # Verificar que psutil funciona
    try:
        import psutil
        print("‚úÖ psutil importado correctamente")
    except ImportError:
        print("‚ùå Error importando psutil")
        return False
    
    # Verificar que Flask funciona
    try:
        import flask
        print("‚úÖ Flask importado correctamente")
    except ImportError:
        print("‚ùå Error importando Flask")
        return False
    
    return True

def main():
    """Funci√≥n principal de instalaci√≥n"""
    print("üöÄ Instalador de Hardware Monitor")
    print("=" * 40)
    
    # Verificar Python
    if not check_python_version():
        sys.exit(1)
    
    # Crear entorno virtual
    if not create_virtual_environment():
        print("‚ùå No se pudo crear el entorno virtual")
        sys.exit(1)
    
    # Instalar dependencias
    if not install_dependencies():
        print("‚ùå No se pudieron instalar las dependencias")
        sys.exit(1)
    
    # Crear archivo .env
    if not create_env_file():
        print("‚ùå No se pudo crear el archivo .env")
        sys.exit(1)
    
    # Probar instalaci√≥n
    if not test_installation():
        print("‚ùå La instalaci√≥n no se complet√≥ correctamente")
        sys.exit(1)
    
    print("\nüéâ ¬°Instalaci√≥n completada exitosamente!")
    print("\nüìã Pr√≥ximos pasos:")
    print("1. Activar el entorno virtual:")
    if os.name == 'nt':
        print("   venv\\Scripts\\activate")
    else:
        print("   source venv/bin/activate")
    
    print("2. Ejecutar la aplicaci√≥n:")
    print("   python run.py")
    print("   o")
    print("   python run.py --debug")
    
    print("3. Abrir en el navegador:")
    print("   http://localhost:5000")
    
    print("\nüìö Para m√°s informaci√≥n, consulta el README.md")

if __name__ == "__main__":
    main() 